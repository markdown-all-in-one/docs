"use strict";(self.webpackChunkmarkdown_all_in_one_docs=self.webpackChunkmarkdown_all_in_one_docs||[]).push([[5989],{805:(e,a,n)=>{n.r(a),n.d(a,{data:()=>i});const i={key:"v-d810896a",path:"/contributing/code-style/file.html",title:"File naming",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Examples",slug:"examples",children:[]},{level:2,title:"Description",slug:"description",children:[]},{level:2,title:"Background",slug:"background",children:[]},{level:2,title:"Conventional file names",slug:"conventional-file-names",children:[]}],filePathRelative:"contributing/code-style/file.md"}},3852:(e,a,n)=>{n.r(a),n.d(a,{default:()=>p});var i=n(6252);const s=(0,i.uE)('<h1 id="file-naming" tabindex="-1"><a class="header-anchor" href="#file-naming" aria-hidden="true">#</a> File naming</h1><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><ul><li><p><code>i-disposable</code></p></li><li><p><code>json5</code></p></li><li><p><code>markdown-engine</code></p></li><li><p><code>markdown-it-task-list</code></p></li></ul><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z][a-z0-9]*(-[a-z0-9]+)*$</span><span class="token regex-delimiter">/</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Unless conventions apply, the base name of a file and the name of a directory use <code>kebab-case</code>.</p>',6),l=(0,i.Uk)("This roughly follows the rules of "),o={href:"https://docs.npmjs.com/creating-a-package-json-file",target:"_blank",rel:"noopener noreferrer"},r=(0,i.Uk)("npm package name"),t=(0,i.Uk)(", and adds a few restrictions to ensure interoperability."),c=(0,i.uE)('<p>It&#39;s recommended to only use lower case ASCII letters in each word:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z]+(-[a-z]+)*$</span><span class="token regex-delimiter">/</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Entries with conventions, such as <code>README</code>, are not affected by this rule.</p><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> Background</h2><p>The printable ASCII characters are still the safest set nowadays.</p><p>Case sensitivity is also a big concern. URI is case-sensitive. Some file systems are case-sensitive, while others are not. Mixed case can frequently lead to unexpected behavior in access, searching, comparison, and sorting.</p><p>Some projects choose <code>snake_case</code>. But renaming is painful, since most file explorers and text editors don&#39;t recognize underscores as word separators.</p><h2 id="conventional-file-names" tabindex="-1"><a class="header-anchor" href="#conventional-file-names" aria-hidden="true">#</a> Conventional file names</h2><p>This article does not apply to those with conventions. This section lists some well-known ones.</p><p>Entries:</p><ul><li><p><code>.github</code></p></li><li><p><code>CHANGELOG</code></p></li><li><p><code>CITATION</code></p></li><li><p><code>CODE_OF_CONDUCT</code></p></li><li><p><code>CODEOWNERS</code></p></li><li><p><code>CONTRIBUTING</code></p></li><li><p><code>LICENSE</code></p></li><li><p><code>README</code></p></li></ul><p>Environments:</p><ul><li><p>.NET</p></li><li><p>Git</p></li><li><p>Java</p></li><li><p>MATLAB</p></li><li><p>Python</p></li><li><p>Ruby</p></li><li><p>Vue</p></li><li><p>Webpack</p></li><li><p>Wolfram</p></li></ul>',13),p={render:function(e,a){const n=(0,i.up)("OutboundLink");return(0,i.wg)(),(0,i.j4)(i.HY,null,[s,(0,i.Wm)("p",null,[l,(0,i.Wm)("a",o,[r,(0,i.Wm)(n)]),t]),c],64)}}}}]);